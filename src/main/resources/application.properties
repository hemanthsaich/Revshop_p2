spring.application.name=adminservice

server.port=8083

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/p2project
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

#management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j Properties
#resilience4j.circuitbreaker.instances.admin.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.admin.event-consumer-buffer-size=10
#resilience4j.circuitbreaker.instances.admin.slidingWindowType=COUNT_BASED
#resilience4j.circuitbreaker.instances.admin.slidingWindowSize=5
#resilience4j.circuitbreaker.instances.admin.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.admin.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.instances.admin.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.instances.admin.automaticTransitionFromOpenToHalfOpenEnabled=true

# Resilience4j Timeout Properties
#resilience4j.timelimiter.instances.admin.timeout-duration=3s

# Resilience4j Retry Properties
#resilience4j.retry.instances.admin.max-attempts=3
#resilience4j.retry.instances.admin.wait-duration=5

resilience4j.ratelimiter.instances.getMessageRateLimit.limit-for-period=2
resilience4j.ratelimiter.instances.getMessageRateLimit.limit-refresh-period=5s
resilience4j.ratelimiter.instances.getMessageRateLimit.timeout-duration=0
# Tracing Properties
#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
#management.tracing.sampling.probability=1.0
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Monitoring Properties (Actuator Prometheus Endpoint)
#management.endpoints.web.exposure.include=prometheus
#management.endpoints.web.exposure.include= ["metrics", "prometheus"]
eureka.instance.hostname=localhost

management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always

# Resilience4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# Resilience4j Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

# Resilience4j Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5

# Tracing Properties
#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
#management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.consumer.group-id=notificationId
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.adminservice.service.OrderPlacedEvent














